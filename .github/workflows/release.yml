name: Build and release
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  release:
    name: Build docker image and release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Semantic Release
        id: srelease
        uses: cycjimmy/semantic-release-action@v2
        with:
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Docker buildX
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker hub
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_TOKEN}}

      - name: Prepare docker image tag
        id: docker_tag
        run: |
          domain="${{secrets.DOCKER_USERNAME}}"
          name="${{github.event.repository.name}}"
          version="${{ steps.srelease.outputs.last_release_version }}"
          
          echo "${{ steps.srelease.outputs.last_release_version }}"
          echo "${{ steps.srelease.outputs.new_release_published }}"
          echo "${{ steps.srelease.outputs.last_release_version }}"
          
          if [ '${{ steps.srelease.outputs.new_release_published }}' = 'true' ]; then
            version="${{ steps.srelease.outputs.new_release_version }}"
          fi
          
          TAG="${domain}/${name}:${version}"
          echo ::set-output name=tag::${TAG}
          echo "::add-mask::${TAG}"


      - name: Build and push docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{steps.docker_tag.outputs.tag}}
        if: ${{steps.srelease.outputs.new_release_published}} == true #only if we have a new release

      - name: Create ansible temp env config directory
        run: sudo mkdir -p /home/ansible-temp

      - name: Deploy the image using ansible
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: ${{github.workspace}}/.ansible/playbooks/release.yml
          key: ${{secrets.SSH_PRIVATE_KEY}}
          vault_password: ${{secrets.ANSIBLE_VAULT_PASSWORD}}
          directory: /home/ansible-temp
          inventory: |
            [all]
            ${{secrets.MAIN_SERVER}}
          options: |
            -u  ${{secrets.SSH_USER}}
            -e  "image_tag=${{steps.docker_tag.outputs.tag}}"
            -e  "remote_path=${{secrets.REMOTE_WORKSPACE}}"
            -e  "local_path=${{github.workspace}}"
            -e  "remote_files_owner_user=${{secrets.REMOTE_FILES_OWNER_USER}}"
            -e  "remote_files_owner_group=${{secrets.REMOTE_FILES_OWNER_GROUP}}"